{"version":3,"sources":["webpack:///./src/templates/tags/index.jsx","webpack:///./src/templates/tags/tags.module.less"],"names":["TagPage","data","tag","pageContext","tagName","Config","tags","name","Utils","capitalize","tagPagePath","pages","tagImage","allFile","edges","find","edge","node","childImageSharp","fluid","posts","allMarkdownRemark","className","page","title","description","path","resolvePageUrl","keywords","style","tagsList","bannerImgContainer","bannerImg","alt","gutter","map","post","key","xs","sm","md","lg","module","exports"],"mappings":"oVAyHeA,UAxGC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KACVC,EADkC,EAAlBC,YAChBD,IACFE,EAAUC,IAAOC,KAAKJ,GAAKK,MAAQC,IAAMC,WAAWP,GACpDQ,EAAcL,IAAOM,MAAMT,IAC3BU,EAAWX,EAAKY,QAAQC,MAAMC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAKV,OAASL,KAAKe,KAAKC,gBAC5EC,MACIC,EAAQnB,EAAKoB,kBAAkBP,MACrC,OACC,kBAAC,UAAD,KACC,uBAAQQ,UAAU,gBACjB,uBAAQA,UAAU,aACjB,kBAAC,IAAD,CAAQC,KAAK,SACb,kBAAC,IAAD,CACCC,MAAOpB,EACPqB,YAAW,kBAAoBrB,EAApB,KAAgCC,IAAOC,KAAKJ,GAAKuB,YAAjD,IACXC,KAAMlB,IAAMmB,eAAejB,EAAaR,GACxC0B,SAAU,CAACxB,KAEZ,kBAAC,IAAD,KACC,yBAAKkB,UAAS,kBAAoBO,IAAMC,UACvC,gCAAM1B,GACN,yBAAKkB,UAAWO,IAAME,oBACrB,kBAAC,IAAD,CAAKT,UAAWO,IAAMG,UAAWb,MAAOP,EAAUqB,IAAK7B,KAExD,wBAAIkB,UAAU,cAAcjB,IAAOC,KAAKJ,GAAKuB,cAE9C,uBAAKS,OAAQ,CAAC,GAAI,KAChBd,EAAMe,KAAI,SAACC,EAAMC,GAAP,OAEV,uBAAKA,IAAKA,EAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC1C,kBAAC,IAAD,CAAUxC,KAAMmC,e,qBC9CzBM,EAAOC,QAAU,CAAC,SAAW,+BAA+B,mBAAqB,yCAAyC,UAAY","file":"component---src-templates-tags-index-jsx-de400e66df3cca36cf46.js","sourcesContent":["/* eslint-disable react/forbid-prop-types */\n/* Vendor imports */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport { Layout, Row, Col } from 'antd';\n/* App imports */\nimport SEO from '../../components/Seo';\nimport Header from '../../components/PageLayout/Header';\nimport PostCard from '../../components/PostCard';\nimport SidebarWrapper from '../../components/PageLayout/Sidebar';\nimport Config from '../../../config';\nimport Utils from '../../utils/pageUtils';\nimport style from './tags.module.less';\nimport ScrollHOC from '../../pages/scrollHOC';\n\nconst TagPage = ({ data, pageContext }) => {\n\tconst { tag } = pageContext;\n\tconst tagName = Config.tags[tag].name || Utils.capitalize(tag);\n\tconst tagPagePath = Config.pages.tag;\n\tconst tagImage = data.allFile.edges.find(edge => edge.node.name === tag).node.childImageSharp\n\t\t.fluid;\n\tconst posts = data.allMarkdownRemark.edges;\n\treturn (\n\t\t<ScrollHOC>\n\t\t\t<Layout className=\"outerPadding\">\n\t\t\t\t<Layout className=\"container\">\n\t\t\t\t\t<Header page=\"tags\" />\n\t\t\t\t\t<SEO\n\t\t\t\t\t\ttitle={tagName}\n\t\t\t\t\t\tdescription={`All post about ${tagName}. ${Config.tags[tag].description} `}\n\t\t\t\t\t\tpath={Utils.resolvePageUrl(tagPagePath, tag)}\n\t\t\t\t\t\tkeywords={[tagName]}\n\t\t\t\t\t/>\n\t\t\t\t\t<SidebarWrapper>\n\t\t\t\t\t\t<div className={`marginTopTitle ${style.tagsList}`}>\n\t\t\t\t\t\t\t<h1>#{tagName}</h1>\n\t\t\t\t\t\t\t<div className={style.bannerImgContainer}>\n\t\t\t\t\t\t\t\t<Img className={style.bannerImg} fluid={tagImage} alt={tagName} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<h4 className=\"textCenter\">{Config.tags[tag].description}</h4>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Row gutter={[20, 20]}>\n\t\t\t\t\t\t\t{posts.map((post, key) => (\n\t\t\t\t\t\t\t\t// eslint-disable-next-line react/no-array-index-key\n\t\t\t\t\t\t\t\t<Col key={key} xs={24} sm={24} md={12} lg={8}>\n\t\t\t\t\t\t\t\t\t<PostCard data={post} />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</SidebarWrapper>\n\t\t\t\t</Layout>\n\t\t\t</Layout>\n\t\t</ScrollHOC>\n\t);\n};\n\nTagPage.propTypes = {\n\tdata: PropTypes.shape({\n\t\tallMarkdownRemark: PropTypes.shape({\n\t\t\tedges: PropTypes.arrayOf(PropTypes.object).isRequired,\n\t\t}).isRequired,\n\t\tallFile: PropTypes.shape({\n\t\t\tedges: PropTypes.arrayOf(\n\t\t\t\tPropTypes.shape({\n\t\t\t\t\tnode: PropTypes.shape({\n\t\t\t\t\t\tname: PropTypes.string.isRequired,\n\t\t\t\t\t\tchildImageSharp: PropTypes.shape({\n\t\t\t\t\t\t\tfluid: PropTypes.object.isRequired,\n\t\t\t\t\t\t}).isRequired,\n\t\t\t\t\t}).isRequired,\n\t\t\t\t}),\n\t\t\t).isRequired,\n\t\t}).isRequired,\n\t}).isRequired,\n\tpageContext: PropTypes.shape({\n\t\ttag: PropTypes.string.isRequired,\n\t}).isRequired,\n};\n\nexport const pageQuery = graphql`\n\tquery($tag: String!) {\n\t\tallMarkdownRemark(\n\t\t\tfilter: { frontmatter: { tags: { in: [$tag] } }, fileAbsolutePath: { regex: \"/index.md$/\" } }\n\t\t\tsort: { fields: [frontmatter___date], order: DESC }\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\t\t\t\tpath\n\t\t\t\t\t\ttags\n\t\t\t\t\t\texcerpt\n\t\t\t\t\t\tcover {\n\t\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\t\tfluid(maxWidth: 600) {\n\t\t\t\t\t\t\t\t\t...GatsbyImageSharpFluid_tracedSVG\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tallFile(filter: { name: { eq: $tag }, dir: { regex: \"/tags$/\" } }) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tname\n\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\tfluid(maxHeight: 600) {\n\t\t\t\t\t\t\t...GatsbyImageSharpFluid_tracedSVG\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport default TagPage;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tagsList\":\"tags-module--tagsList--39vLn\",\"bannerImgContainer\":\"tags-module--bannerImgContainer--24LjU\",\"bannerImg\":\"tags-module--bannerImg--xzH6c\"};"],"sourceRoot":""}