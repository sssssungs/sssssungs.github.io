{"version":3,"sources":["webpack:///./src/components/TagCard/tags.module.less","webpack:///./src/pages/scrollHOC.jsx","webpack:///./src/components/TagCard/index.jsx","webpack:///./src/pages/tags/index.jsx"],"names":["module","exports","ScrollHOC","children","React","useState","scrolled","setScrolled","scrollProgress","scrollPx","document","documentElement","scrollTop","winHeightPx","scrollHeight","clientHeight","useEffect","window","addEventListener","removeEventListener","progressBarStyle","height","background","width","style","position","top","left","zIndex","TagCard","props","img","name","description","color","tagPage","Config","pages","tag","className","tagCard","to","Utils","resolvePageUrl","tagImg","src","alt","pd20px","Tags","data","edges","allFile","rawTags","allMarkdownRemark","map","edge","node","frontmatter","tags","reduce","prev","curr","concat","filter","index","indexOf","sort","tagData","Header","title","path","Sidebar","gutter","val","key","xs","sm","md","lg","childImageSharp","fluid"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,QAAU,8BAA8B,OAAS,6BAA6B,OAAS,+B,oCCDzG,gCA0CeC,UAxCG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpB,EAAgCC,IAAMC,SAAS,KAAxCC,EAAP,KAAiBC,EAAjB,KAEMC,EAAiB,WACtB,IAAMC,EAAWC,SAASC,gBAAgBC,UACpCC,EACLH,SAASC,gBAAgBG,aAAeJ,SAASC,gBAAgBI,aAClER,EAAgBE,EAAWI,EAAe,IAA/B,MAGZT,IAAMY,WAAU,WAEf,OADAC,OAAOC,iBAAiB,SAAUV,GAC3B,kBAAMS,OAAOE,oBAAoB,SAAUX,MAChD,IAEH,IAUMY,EAAmB,CACxBC,OAAQ,OACRC,WAAY,UACZC,MAAOjB,GAER,OACC,oCACC,yBAAKkB,MAjBwB,CAC9BF,WAAY,cACZD,OAAQ,OACRI,SAAU,QACVC,IAAK,EACLC,KAAM,EACNJ,MAAO,QACPK,OAAQ,KAWN,yBAAKJ,MAAOJ,KAEZjB,K,6QCXW0B,EApBC,SAAAC,GACf,IAAQC,EAAkCD,EAAlCC,IAAKC,EAA6BF,EAA7BE,KAAMC,EAAuBH,EAAvBG,YAAaC,EAAUJ,EAAVI,MAC1BC,EAAUC,IAAOC,MAAMC,IAC7B,OACC,kBAAC,OAAD,CAAMC,UAAWf,IAAMgB,QAASC,GAAIC,IAAMC,eAAeR,EAASH,IACjE,yBAAKO,UAAWf,IAAMgB,SACrB,yBAAKD,UAAWf,IAAMoB,QACrB,yBAAKC,IAAKd,EAAKR,MAAM,OAAOF,OAAO,OAAOyB,IAAI,YAE/C,yBAAKP,UAAWf,IAAMuB,QACrB,yBAAKR,UAAU,cACd,wBAAIf,MAAO,CAAEU,MAAM,GAAIA,IAAvB,IAAoCF,IAErC,2BAAIC,O,YC6FMe,UApGF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEHC,EACRD,EADHE,QAAWD,MAENE,EAAUH,EAAKI,kBAAkBH,MACrCI,KAAI,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYC,QAClCC,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAKE,OAAOD,MACrCT,EAAQW,QAAO,SAACzB,EAAK0B,GAAN,OAAgBA,IAAUZ,EAAQa,QAAQ3B,MAAM4B,OAE/D,IAAMC,EAAU/B,IAAOsB,KACvB,OACC,kBAAC,UAAD,KACC,uBAAQnB,UAAU,gBACjB,uBAAQA,UAAU,aACjB,kBAAC6B,EAAA,EAAD,MACA,kBAAC,IAAD,CACCC,MAAM,OACNpC,YAAY,kLAEZqC,KAAK,SAEN,kBAACC,EAAA,EAAD,KACC,oCACC,yBAAKhC,UAAU,kBACd,wBAAIA,UAAU,iBAAd,SAED,uBAAKiC,OAAQ,CAAC,GAAI,KAChBtB,EAAMI,KAAI,SAAAmB,GAAG,OACb,uBAAKC,IAAKD,EAAIjB,KAAKxB,KAAM2C,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACpD,kBAAC,EAAD,CACC/C,IAAK0C,EAAIjB,KAAKuB,gBAAgBC,MAAMnC,IACpCb,KAAMyC,EAAIjB,KAAKxB,KACfC,YAAakC,EAAQM,EAAIjB,KAAKxB,MAAMC,YACpCC,MAAOiC,EAAQM,EAAIjB,KAAKxB,MAAME","file":"component---src-pages-tags-index-jsx-de2fd028f44d01d2982a.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tagCard\":\"tags-module--tagCard--2sNqZ\",\"tagImg\":\"tags-module--tagImg--21WVr\",\"pd20px\":\"tags-module--pd20px--1m4en\"};","import React from 'react';\n\nconst ScrollHOC = ({ children }) => {\n\tconst [scrolled, setScrolled] = React.useState('0');\n\n\tconst scrollProgress = () => {\n\t\tconst scrollPx = document.documentElement.scrollTop;\n\t\tconst winHeightPx =\n\t\t\tdocument.documentElement.scrollHeight - document.documentElement.clientHeight;\n\t\tsetScrolled(`${(scrollPx / winHeightPx) * 100}%`);\n\t};\n\n\tReact.useEffect(() => {\n\t\twindow.addEventListener('scroll', scrollProgress);\n\t\treturn () => window.removeEventListener('scroll', scrollProgress);\n\t}, []);\n\n\tconst progressContainerStyle = {\n\t\tbackground: 'transparent',\n\t\theight: '12px',\n\t\tposition: 'fixed',\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: '100vw',\n\t\tzIndex: 99,\n\t};\n\n\tconst progressBarStyle = {\n\t\theight: '12px',\n\t\tbackground: '#1890ff',\n\t\twidth: scrolled,\n\t};\n\treturn (\n\t\t<>\n\t\t\t<div style={progressContainerStyle}>\n\t\t\t\t<div style={progressBarStyle} />\n\t\t\t</div>\n\t\t\t{children}\n\t\t</>\n\t);\n};\n\nexport default ScrollHOC;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport Config from '../../../config';\nimport Utils from '../../utils/pageUtils';\nimport style from './tags.module.less';\n\nconst TagCard = props => {\n\tconst { img, name, description, color } = props;\n\tconst tagPage = Config.pages.tag;\n\treturn (\n\t\t<Link className={style.tagCard} to={Utils.resolvePageUrl(tagPage, name)}>\n\t\t\t<div className={style.tagCard}>\n\t\t\t\t<div className={style.tagImg}>\n\t\t\t\t\t<img src={img} width=\"100%\" height=\"100%\" alt=\"images\" />\n\t\t\t\t</div>\n\t\t\t\t<div className={style.pd20px}>\n\t\t\t\t\t<div className=\"textCenter\">\n\t\t\t\t\t\t<h4 style={{ color: `${color}` }}>#{name}</h4>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p>{description}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Link>\n\t);\n};\n\nexport default TagCard;\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport { Layout, Row, Col } from 'antd';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Header from '../../components/PageLayout/Header';\nimport SEO from '../../components/Seo';\nimport SidebarWrapper from '../../components/PageLayout/Sidebar';\nimport TagCard from '../../components/TagCard';\nimport Config from '../../../config';\nimport ScrollHOC from '../scrollHOC';\n\nconst Tags = ({ data }) => {\n\tconst {\n\t\tallFile: { edges },\n\t} = data;\n\tconst rawTags = data.allMarkdownRemark.edges\n\t\t.map(edge => edge.node.frontmatter.tags)\n\t\t.reduce((prev, curr) => prev.concat(curr));\n\trawTags.filter((tag, index) => index === rawTags.indexOf(tag)).sort(); // Remove duplicates and sort values\n\t// const tagPage = Config.pages.tag;\n\tconst tagData = Config.tags;\n\treturn (\n\t\t<ScrollHOC>\n\t\t\t<Layout className=\"outerPadding\">\n\t\t\t\t<Layout className=\"container\">\n\t\t\t\t\t<Header />\n\t\t\t\t\t<SEO\n\t\t\t\t\t\ttitle=\"Tags\"\n\t\t\t\t\t\tdescription=\"This page consists of various Tags on various technologies that I'll be using\n          to write blogs. You can check the blogs related to the tags by clicking on any of the tags below.\"\n\t\t\t\t\t\tpath=\"tags\"\n\t\t\t\t\t/>\n\t\t\t\t\t<SidebarWrapper>\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className=\"marginTopTitle\">\n\t\t\t\t\t\t\t\t<h1 className=\"titleSeparate\">Tags</h1>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Row gutter={[30, 20]}>\n\t\t\t\t\t\t\t\t{edges.map(val => (\n\t\t\t\t\t\t\t\t\t<Col key={val.node.name} xs={24} sm={24} md={12} lg={8}>\n\t\t\t\t\t\t\t\t\t\t<TagCard\n\t\t\t\t\t\t\t\t\t\t\timg={val.node.childImageSharp.fluid.src}\n\t\t\t\t\t\t\t\t\t\t\tname={val.node.name}\n\t\t\t\t\t\t\t\t\t\t\tdescription={tagData[val.node.name].description}\n\t\t\t\t\t\t\t\t\t\t\tcolor={tagData[val.node.name].color}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</>\n\t\t\t\t\t</SidebarWrapper>\n\t\t\t\t</Layout>\n\t\t\t</Layout>\n\t\t</ScrollHOC>\n\t);\n};\n\nTags.propTypes = {\n\tdata: PropTypes.shape({\n\t\tallMarkdownRemark: PropTypes.shape({\n\t\t\tedges: PropTypes.arrayOf(\n\t\t\t\tPropTypes.shape({\n\t\t\t\t\tnode: PropTypes.shape({\n\t\t\t\t\t\tfrontmatter: PropTypes.shape({\n\t\t\t\t\t\t\ttags: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n\t\t\t\t\t\t}).isRequired,\n\t\t\t\t\t}).isRequired,\n\t\t\t\t}).isRequired,\n\t\t\t).isRequired,\n\t\t}).isRequired,\n\t\tallFile: PropTypes.shape({\n\t\t\tedges: PropTypes.arrayOf(\n\t\t\t\tPropTypes.shape({\n\t\t\t\t\tnode: PropTypes.shape({\n\t\t\t\t\t\tname: PropTypes.string.isRequired,\n\t\t\t\t\t\tchildImageSharp: PropTypes.shape({\n\t\t\t\t\t\t\tfluid: PropTypes.object.isRequired,\n\t\t\t\t\t\t}).isRequired,\n\t\t\t\t\t}).isRequired,\n\t\t\t\t}).isRequired,\n\t\t\t).isRequired,\n\t\t}).isRequired,\n\t}).isRequired,\n};\n\nexport const query = graphql`\n\t{\n\t\tallMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/index.md$/\" } }) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttags\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tallFile(filter: { relativeDirectory: { eq: \"tags\" } }) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tname\n\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\tfluid(maxWidth: 400) {\n\t\t\t\t\t\t\t...GatsbyImageSharpFluid_tracedSVG\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport default Tags;\n"],"sourceRoot":""}