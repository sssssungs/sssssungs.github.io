{"version":3,"file":"component---src-templates-tags-index-jsx-b63cc7eaa39315319502.js","mappings":"2MAiDA,MA3CiBA,IAChB,MACCC,MACCC,MAAM,YAAEC,KAENH,EAEJ,OACCI,EAAAA,cAAA,OAAKC,UCXe,oCDYnBD,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAIC,IAAAA,eAAqBL,EAAYM,OAC1CL,EAAAA,cAAA,OAAKC,UCZgB,uCDapBD,EAAAA,cAAA,OACCM,IAAKP,EAAcA,EAAYQ,MAAMC,gBAAgBC,MAAMH,IAAM,GACjEI,MAAM,OACNC,OAAO,OACPC,IAAI,aAIPZ,EAAAA,cAAA,OAAKC,UCvBY,kCDwBhBD,EAAAA,cAAA,SACCA,EAAAA,cAAA,QAAMC,UC1Ba,sCD2BjBF,EACEc,IAAO,IAAIC,KAAKf,EAAYgB,MAAO,YAAYC,OAAO,eACtD,KAGLhB,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAIC,IAAAA,eAAqBL,EAAYM,OAC1CL,EAAAA,cAAA,UAAKD,EAAcA,EAAYkB,MAAQ,KAExCjB,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAIC,IAAAA,eAAqBL,EAAYM,OAC1CL,EAAAA,cAAA,SAAID,EAAcA,EAAYmB,QAAU,KAEzClB,EAAAA,cAAA,OAAKC,UClCS,gCDmCZF,EAAYoB,KAAKC,KAAI,CAACC,EAAKC,IAC3BtB,EAAAA,cAACE,EAAAA,KAAI,CAACqB,IAAKD,EAAOnB,GAAE,SAAWkB,GAAM,IAAMA,OAIzC,C,8OE4ER,MAxGgBG,IAA4B,IAA3B,KAAE3B,EAAI,YAAE4B,GAAaD,EACrC,MAAM,IAAEH,GAAQI,EACVC,EAAUC,IAAAA,KAAYN,GAAKO,MAAQxB,IAAAA,WAAiBiB,GACpDQ,EAAcF,IAAAA,MAAaN,IAC3BS,EAAWjC,EAAKkC,QAAQC,MAAMC,MAAKC,GAAQA,EAAKpC,KAAK8B,OAASP,IAAKvB,KAAKU,gBAC5EC,MACI0B,EAAQtC,EAAKuC,kBAAkBJ,MACrC,OACChC,EAAAA,cAACqC,EAAAA,QAAS,KACTrC,EAAAA,cAAAsC,EAAAA,EAAA,CAAQrC,UAAU,gBACjBD,EAAAA,cAAAsC,EAAAA,EAAA,CAAQrC,UAAU,aACjBD,EAAAA,cAACuC,EAAAA,EAAM,CAACC,KAAK,SACbxC,EAAAA,cAACyC,EAAAA,EAAG,CACHxB,MAAOS,EACPgB,YAAW,kBAAoBhB,EAAO,KAAKC,IAAAA,KAAYN,GAAKqB,YAAW,IACvErC,KAAMD,IAAAA,eAAqByB,EAAaR,GACxCsB,SAAU,CAACjB,KAEZ1B,EAAAA,cAAC4C,EAAAA,EAAc,KACd5C,EAAAA,cAAA,OAAKC,UAAS,+CACbD,EAAAA,cAAA,UAAI,IAAE0B,GACN1B,EAAAA,cAAA,OAAKC,UCpCoB,0CDqCxBD,EAAAA,cAAC6C,EAAAA,EAAG,CAAC5C,UCtCU,gCDsCkBQ,MAAOqB,EAAUlB,IAAKc,KAExD1B,EAAAA,cAAA,MAAIC,UAAU,cAAc0B,IAAAA,KAAYN,GAAKqB,cAE9C1C,EAAAA,cAAA8C,EAAAA,EAAA,CAAKC,OAAQ,CAAC,GAAI,KAChBZ,EAAMf,KAAI,CAAC4B,EAAMzB,IAEjBvB,EAAAA,cAAAiD,EAAAA,EAAA,CAAK1B,IAAKA,EAAK2B,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC1CrD,EAAAA,cAACsD,EAAAA,EAAQ,CAACzD,KAAMmD,WAOX,C","sources":["webpack://randy_blog/./src/components/PostCard/index.jsx","webpack://randy_blog/./src/components/PostCard/postCard.module.less","webpack://randy_blog/./src/templates/tags/index.jsx","webpack://randy_blog/./src/templates/tags/tags.module.less"],"sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport { Link } from 'gatsby';\nimport * as style from './postCard.module.less';\nimport Utils from '../../utils/pageUtils';\n\nconst PostCard = props => {\n\tconst {\n\t\tdata: {\n\t\t\tnode: { frontmatter },\n\t\t},\n\t} = props;\n\n\treturn (\n\t\t<div className={style.postCard}>\n\t\t\t<Link to={Utils.resolvePageUrl(frontmatter.path)}>\n\t\t\t\t<div className={style.postCardImg}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={frontmatter ? frontmatter.cover.childImageSharp.fluid.src : ''}\n\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\theight=\"100%\"\n\t\t\t\t\t\talt=\"images\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Link>\n\t\t\t<div className={style.mrTp20}>\n\t\t\t\t<p>\n\t\t\t\t\t<span className={style.dateHolder}>\n\t\t\t\t\t\t{frontmatter\n\t\t\t\t\t\t\t? moment(new Date(frontmatter.date), 'YYYYMMDD').format('MMM Do YYYY')\n\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t</span>\n\t\t\t\t</p>\n\t\t\t\t<Link to={Utils.resolvePageUrl(frontmatter.path)}>\n\t\t\t\t\t<h3>{frontmatter ? frontmatter.title : ''}</h3>\n\t\t\t\t</Link>\n\t\t\t\t<Link to={Utils.resolvePageUrl(frontmatter.path)}>\n\t\t\t\t\t<p>{frontmatter ? frontmatter.excerpt : ''}</p>\n\t\t\t\t</Link>\n\t\t\t\t<div className={style.tags}>\n\t\t\t\t\t{frontmatter.tags.map((tag, index) => (\n\t\t\t\t\t\t<Link key={index} to={`/tags/${tag}`}>{`#${tag}`}</Link>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default PostCard;\n","// extracted by mini-css-extract-plugin\nexport var dateHolder = \"postCard-module--dateHolder--4244f\";\nexport var mrTp20 = \"postCard-module--mrTp20--18b15\";\nexport var postCard = \"postCard-module--postCard--cb51b\";\nexport var postCardImg = \"postCard-module--postCardImg--d2f99\";\nexport var tags = \"postCard-module--tags--17d95\";","/* eslint-disable react/forbid-prop-types */\n/* Vendor imports */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport { Layout, Row, Col } from 'antd';\n/* App imports */\nimport SEO from '../../components/Seo';\nimport Header from '../../components/PageLayout/Header';\nimport PostCard from '../../components/PostCard';\nimport SidebarWrapper from '../../components/PageLayout/Sidebar';\nimport Config from '../../../config';\nimport Utils from '../../utils/pageUtils';\nimport * as style from './tags.module.less';\nimport ScrollHOC from '../../pages/scrollHOC';\n\nconst TagPage = ({ data, pageContext }) => {\n\tconst { tag } = pageContext;\n\tconst tagName = Config.tags[tag].name || Utils.capitalize(tag);\n\tconst tagPagePath = Config.pages.tag;\n\tconst tagImage = data.allFile.edges.find(edge => edge.node.name === tag).node.childImageSharp\n\t\t.fluid;\n\tconst posts = data.allMarkdownRemark.edges;\n\treturn (\n\t\t<ScrollHOC>\n\t\t\t<Layout className=\"outerPadding\">\n\t\t\t\t<Layout className=\"container\">\n\t\t\t\t\t<Header page=\"tags\" />\n\t\t\t\t\t<SEO\n\t\t\t\t\t\ttitle={tagName}\n\t\t\t\t\t\tdescription={`All post about ${tagName}. ${Config.tags[tag].description} `}\n\t\t\t\t\t\tpath={Utils.resolvePageUrl(tagPagePath, tag)}\n\t\t\t\t\t\tkeywords={[tagName]}\n\t\t\t\t\t/>\n\t\t\t\t\t<SidebarWrapper>\n\t\t\t\t\t\t<div className={`marginTopTitle ${style.tagsList}`}>\n\t\t\t\t\t\t\t<h1>#{tagName}</h1>\n\t\t\t\t\t\t\t<div className={style.bannerImgContainer}>\n\t\t\t\t\t\t\t\t<Img className={style.bannerImg} fluid={tagImage} alt={tagName} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<h4 className=\"textCenter\">{Config.tags[tag].description}</h4>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Row gutter={[20, 20]}>\n\t\t\t\t\t\t\t{posts.map((post, key) => (\n\t\t\t\t\t\t\t\t// eslint-disable-next-line react/no-array-index-key\n\t\t\t\t\t\t\t\t<Col key={key} xs={24} sm={24} md={12} lg={8}>\n\t\t\t\t\t\t\t\t\t<PostCard data={post} />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</SidebarWrapper>\n\t\t\t\t</Layout>\n\t\t\t</Layout>\n\t\t</ScrollHOC>\n\t);\n};\n\nTagPage.propTypes = {\n\tdata: PropTypes.shape({\n\t\tallMarkdownRemark: PropTypes.shape({\n\t\t\tedges: PropTypes.arrayOf(PropTypes.object).isRequired,\n\t\t}).isRequired,\n\t\tallFile: PropTypes.shape({\n\t\t\tedges: PropTypes.arrayOf(\n\t\t\t\tPropTypes.shape({\n\t\t\t\t\tnode: PropTypes.shape({\n\t\t\t\t\t\tname: PropTypes.string.isRequired,\n\t\t\t\t\t\tchildImageSharp: PropTypes.shape({\n\t\t\t\t\t\t\tfluid: PropTypes.object.isRequired,\n\t\t\t\t\t\t}).isRequired,\n\t\t\t\t\t}).isRequired,\n\t\t\t\t}),\n\t\t\t).isRequired,\n\t\t}).isRequired,\n\t}).isRequired,\n\tpageContext: PropTypes.shape({\n\t\ttag: PropTypes.string.isRequired,\n\t}).isRequired,\n};\n\nexport const pageQuery = graphql`\n\tquery($tag: String!) {\n\t\tallMarkdownRemark(\n\t\t\tfilter: { frontmatter: { tags: { in: [$tag] } }, fileAbsolutePath: { regex: \"/index.md$/\" } }\n\t\t\tsort: { fields: [frontmatter___date], order: DESC }\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\t\t\t\tpath\n\t\t\t\t\t\ttags\n\t\t\t\t\t\texcerpt\n\t\t\t\t\t\tcover {\n\t\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\t\tfluid(maxWidth: 600) {\n\t\t\t\t\t\t\t\t\t...GatsbyImageSharpFluid_tracedSVG\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tallFile(filter: { name: { eq: $tag }, dir: { regex: \"/tags$/\" } }) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tname\n\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\tfluid(maxHeight: 600) {\n\t\t\t\t\t\t\t...GatsbyImageSharpFluid_tracedSVG\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport default TagPage;\n","// extracted by mini-css-extract-plugin\nexport var bannerImg = \"tags-module--bannerImg--94b1c\";\nexport var bannerImgContainer = \"tags-module--bannerImgContainer--9c71c\";\nexport var tagsList = \"tags-module--tagsList--080ef\";"],"names":["props","data","node","frontmatter","React","className","Link","to","Utils","path","src","cover","childImageSharp","fluid","width","height","alt","moment","Date","date","format","title","excerpt","tags","map","tag","index","key","_ref","pageContext","tagName","Config","name","tagPagePath","tagImage","allFile","edges","find","edge","posts","allMarkdownRemark","ScrollHOC","_Layout","Header","page","SEO","description","keywords","SidebarWrapper","Img","_Row","gutter","post","_Col","xs","sm","md","lg","PostCard"],"sourceRoot":""}